---
# Ansible Playbook to upload images to Cisco devices 
# Check available space and quit if failed
#
# Defined variables in template survey
#
# upgrade_filename - Firmware filename to be uploaded
# file_size_kb - File size in kilo Bytes
# command_timeout - Timeout for ansible command execution. Configure to allow long upload time (in seconds)
# transfer_mode - TFTP or SCP
# server_ip - TFTP or SCP server IP address
# path - Path in TFTP/SCP server storing firmware file
# scp_username - Username used to login SCP server. Not used in TFTP.
# scp_password - Password used to login SCP server (encrypted). Not used in TFTP.
# 
- name: Upload images to Cisco devices 
  hosts: all
  gather_facts: false

  tasks:
  # Task 1: Perform check on available free space
    - name: Gather facts from Cisco devices
      cisco.ios.ios_facts:
        gather_subset:
          - hardware
      register: facts

    - name: Set device storage based on booting images setting
      set_fact:
        device_storage: "{{ facts.ansible_facts.ansible_net_filesystems[0] }}"

    - name: Display filesystem information
      debug:
        var: facts

    - name: Set free space variable for flash
      set_fact:
        free_space: "{{ facts.ansible_facts.ansible_net_filesystems_info[device_storage]['spacefree_kb'] }}"

    - name: Check if the device has enough space for the new image file
      assert:
        that:
          - ( file_size_kb | int) < (free_space | int)
        fail_msg: "Not enough space on the device! Please clean up before continue."
        success_msg: "Free space is available. Continue to upload image."

# Check if the new image file already exists on the router
# Task 2: Create EEM scripts to upload file
    - name: Run "show run | inc event.*UPLOAD" to check if the device has already been configured with a upload EEM script
      cisco.ios.ios_command:
        commands:
          - "show run | inc event.*UPLOAD"
      register: upload_output

    - name: Determine if an UPLOAD script exists
      set_fact:
        eem_exist: >
          {% if 'UPLOAD' in upload_output.stdout[0] %}
            true
          {% else %}
            false
          {% endif %}

    # Task 2: Configure the EEM scripts

    - name: Ensure command_timeout is an integer
      set_fact:
        command_timeout: "{{ command_timeout | int }}"

    - name: Configure the EEM script by first removing the existing one 
      cisco.ios.ios_config:
        lines:
          - no event manager applet UPLOAD
      when: eem_exist 

    - name: Prepend "vrf " in front of the VRF variable if being set in the template
      set_fact:
        new_vrf: "{{ 'vrf ' ~ vrf_name if vrf_name | length > 0 else '' }}"

    - name: Configure the actual EEM script for TFTP
      cisco.ios.ios_config:
        lines:
          - event manager applet UPLOAD authorization bypass
          - event none maxrun {{ command_timeout }}
          - action 0001 cli command "enable"
          - action 0002 cli command "term length 0"
          - action 0010 cli command "copy tftp://{{ server_ip }}{{ path }}/{{ upgrade_filename }} {{ device_storage }} {{ new_vrf }}" pattern "Destination"
          - action 0020 cli command "{{ upgrade_filename }}" 
      when: transfer_mode == "TFTP"

    - name: Configure the actual EEM script for SCP
      cisco.ios.ios_config:
        lines:
          - event manager applet UPLOAD authorization bypass
          - event none maxrun {{ command_timeout }}
          - action 0001 cli command "enable"
          - action 0002 cli command "term length 0"
          - action 0010 cli command "copy scp://{{ scp_username }}@{{ server_ip }}/{{ path }}/{{ upgrade_filename }} {{ device_storage }} {{ new_vrf }}" pattern "Destination"
          - action 0020 cli command "{{ upgrade_filename }}" pattern "Password"
          - action 0030 cli command "{{ scp_password }}"
      when: transfer_mode == "SCP"

    - name: Run the EEM script to perform upload 
      cisco.ios.ios_command:
        commands: "event manager run UPLOAD"
      vars:
        ansible_command_timeout: "{{ command_timeout }}"

    - name: Remove EEM script post upload 
      cisco.ios.ios_config:
        lines: 
          - "no event manager applet UPLOAD"
        save_when: always
